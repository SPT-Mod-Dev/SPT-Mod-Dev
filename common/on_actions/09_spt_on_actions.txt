on_actions = {
	on_startup = {
		effect = {
			#Suck it sticky #it didnt work too well ginger, theyve joined factions
			#Prevent countries joining faction
			YUG = {
				set_rule = { can_join_factions = no }
			}
			GRE = {
				set_rule = { can_join_factions = no }
			}
			POR = {
				set_rule = { can_join_factions = no }
			}
			TUR = {
				set_rule = { can_join_factions = no }
			}

			#Tannu Tuva starts as a puppet to better work with Right Opp Planned Eco focus
			SOV = {
				puppet = TAN
			}
			
			#Gives all players training division
			every_country = {
				limit = {
					is_ai = no
				}
				division_template = {
					name = "1 Division Training Template"
					division_names_group = AFG_ARM_01
					regiments = {
						infantry = {
							x = 0
							y = 0
						}
						infantry = {
							x = 0
							y = 1
						}
						infantry = {
							x = 0
							y = 2
						}
						infantry = {
							x = 0
							y = 3
						}
						infantry = {
							x = 0
							y = 4
						}
						infantry = {
							x = 1
							y = 0
						}
						infantry = {
							x = 1
							y = 1
						}
						infantry = {
							x = 1
							y = 2
						}
						infantry = {
							x = 1
							y = 3
						}
						infantry = {
							x = 1
							y = 4
						}
						infantry = {
							x = 2
							y = 0
						}
						infantry = {
							x = 2
							y = 1
						}
						infantry = {
							x = 2
							y = 2
						}
						infantry = {
							x = 2
							y = 3
						}
						infantry = {
							x = 2
							y = 4
						}
						infantry = {
							x = 3
							y = 0
						}
						infantry = {
							x = 3
							y = 1
						}
						infantry = {
							x = 3
							y = 2
						}
						infantry = {
							x = 3
							y = 3
						}
						infantry = {
							x = 3
							y = 4
						}
						infantry = {
							x = 4
							y = 0
						}
						infantry = {
							x = 4
							y = 1
						}
						infantry = {
							x = 4
							y = 2
						}
						infantry = {
							x = 4
							y = 3
						}
						infantry = {
							x = 4
							y = 4
						}
					}
					priority = 2
				}
			}
			#Researches trains for all players
			every_country = {
				limit = {
					is_ai = no
					NOT = {
						has_tech = basic_train
					}
				}
				set_technology = {
					basic_train = 1
					popup = no
				}
			}
			#Gives all countries 100 convoys
			every_country = {
				add_equipment_to_stockpile = {
					type = convoy
					amount = 100
				}
			}
			#Removed starting guarantees
			FRA = {
				diplomatic_relation = {
					country = ROM
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = YUG
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = CZE
					relation = guarantee
					active = no
				}
			}
			ROM = {
				diplomatic_relation = {
					country = FRA
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = YUG
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = TUR
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = GRE
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = CZE
					relation = guarantee
					active = no
				}
			}
			CZE = {
				diplomatic_relation = {
					country = ROM
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = YUG
					relation = guarantee
					active = no
				}
			}
			USA = {
				diplomatic_relation = {
					country = CAN
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = MEX
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = ARG
					relation = guarantee
					active = no
				}
				diplomatic_relation = {
					country = BRA
					relation = guarantee
					active = no
				}
			}
			ITA = {
				diplomatic_relation = {
					country = ALB
					relation = guarantee
					active = no
				}
			}
			#Add eng POL guarantee
			ENG = {
				diplomatic_relation = {
					country = POL
					relation = guarantee
					active = yes
				}
			}
			#Remove Pakistan cores
			RAJ = {
				443 = {
					remove_core_of = PAK
				}
				444 = {
					remove_core_of = PAK
				}
				445 = {
					remove_core_of = PAK
				}
				440 = {
					remove_core_of = PAK
				}
				442 = {
					remove_core_of = PAK
				}
				430 = {
					remove_core_of = PAK
					remove_core_of = BAN
				}
				787 = {
					remove_core_of = PAK
				}
				441 = {
					remove_claim_by = PAK
				}
				640 = {
					remove_core_of = BRM
				}
				288 = {
					remove_core_of = BRM
				}
			}
			#Remove yugos anti german idea
			YUG = {
				remove_ideas = anti_german_military
			}
			#Prevents argentina joining factions
			ARG = {
				set_rule = {
					can_join_factions = no
				}
			}
			JAP = {
				prop_initialise = yes
			}
			SWE = {
				set_technology = {
					basic_small_airframe = 1
				}
				create_equipment_variant = {
					name = "Foreign fighters"
					type = small_plane_airframe_1
					modules = {
						fixed_main_weapon_slot = light_mg_4x
						fixed_auxiliary_weapon_slot_1 = light_mg_4x
						engine_type_slot = engine_2_1x
						special_type_slot_1 = empty
					}
					icon = "GFX_GER_fighter1_medium"
				}
			}

			

			MON = {
				country_event = { 
					days = 75
					id = spt_mongolia.5
				}
			  }


			if = {
				limit = {
					is_historical_focus_on = no
				}

				GER = { news_event = spt.112 }
				
				sound_effect = "spt_pipe_falling"
			}
		}
	}
	on_state_control_changed = {
		effect = {
			#Checks axis take oslo SPTChange makes it work idk
			if = {
				limit = {
					NOT = { has_global_flag = GER_norr_rights }
					GER = { has_completed_focus = GER_swedish_trade_agreement }
					110 = { 
						controller = { 
							OR = {
								AND = {
									original_tag = NOR
									has_government = fascism
									NOT = { is_ally_with = GER }
								}	
								is_ally_with =  GER
							}
						}
					}
				}
				GER = {
					set_global_flag = GER_norr_rights
					country_event = {
						days = 7
						id = spt.1
					}
				}
			}
			#Checks axis lose oslo
			if = {
				limit = {
					has_global_flag = GER_norr_rights
					GER = { has_completed_focus = GER_swedish_trade_agreement }
					NOT = {
						110 = { 
							controller = { 
								OR = {
									AND = {
										original_tag = NOR
										has_government = fascism
										NOT = { is_ally_with = GER }
									}	
									is_ally_with =  GER
								}
							}
						}
					}
				}
				GER = {
					clr_global_flag = GER_norr_rights
					country_event = {
						days = 3
						id = spt.2
					}
				}
			}
			#Pacific front checks
			#USA takes island
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 629
							state = 630
							state = 631
							state = 632
							state = 638
							state = 327
							state = 627
							state = 634
							state = 523
							state = 737
							state = 526
							state = 524
							state = 645
							state = 648
							state = 646
							state = 684
							state = 647
							state = 633
							state = 555
							state = 591
						}
					}
					OR = {
						ROOT = {
							original_tag = USA
						}
						ROOT = {
							is_ally_with = USA
						}
					}
					OR = {
						FROM = {
							original_tag = JAP
						}
						FROM = {
							is_ally_with = JAP
						}
					}
				}
				JAP = {
					add_power_balance_value = {
						id = JAP_PAC_pacific_front
						value = -0.1
					}
					country_event = {
						id = spt.13
						days = 3
					}
				}
				USA = {
					add_power_balance_value = {
						id = USA_PAC_pacific_front
						value = 0.1
					}
					if = {
						limit = {
							has_active_mission = USA_PAC_secure_island
						}
						set_country_flag = USA_captured_island
					}
				}
			}
			#Japan takes island
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 629
							state = 630
							state = 631
							state = 632
							state = 638
							state = 327
							state = 627
							state = 634
							state = 523
							state = 737
							state = 526
							state = 524
							state = 645
							state = 648
							state = 646
							state = 684
							state = 647
							state = 633
							state = 555
							state = 591
						}
					}
					OR = {
						ROOT = {
							original_tag = JAP
						}
						ROOT = {
							is_ally_with = JAP
						}
					}
					OR = {
						FROM = {
							original_tag = USA
						}
						FROM = {
							is_ally_with = USA
						}
					}
				}
				JAP = {
					add_power_balance_value = {
						id = JAP_PAC_pacific_front
						value = 0.1
					}
					if = {
						limit = {
							has_active_mission = JAP_PAC_secure_island
						}
						set_country_flag = JAP_captured_island
					}
				}
				USA = {
					add_power_balance_value = {
						id = USA_PAC_pacific_front
						value = -0.1
					}
					country_event = spt.13
				}
			}
			#Med front checks
			#ENG takes position
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 114
							state = 115
							state = 182
							state = 164
							state = 448
							state = 450
							state = 116
							state = 446
							state = 118
							state = 1
							state = 183
							state = 459
						}
					}
					OR = {
						ROOT = {
							original_tag = ENG
						}
						ROOT = {
							is_ally_with = ENG
						}
					}
					OR = {
						FROM = {
							original_tag = ITA
						}
						FROM = {
							is_ally_with = ITA
						}
					}
				}
				ITA = {
					add_power_balance_value = {
						id = ITA_MED_med_front
						value = -0.15
					}
					country_event = {
						id = spt.16
						days = 3
					}
				}
				ENG = {
					add_power_balance_value = {
						id = ENG_MED_med_front
						value = 0.15
					}
				}
			}
			#ITA takes position
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 114
							state = 115
							state = 182
							state = 164
							state = 448
							state = 450
							state = 116
							state = 446
							state = 118
							state = 1
							state = 183
							state = 459
						}
					}
					OR = {
						ROOT = {
							original_tag = ITA
						}
						ROOT = {
							is_ally_with = ITA
						}
					}
					OR = {
						FROM = {
							original_tag = ENG
						}
						FROM = {
							is_ally_with = ENG
						}
					}
				}
				ENG = {
					add_power_balance_value = {
						id = ENG_MED_med_front
						value = -0.15
					}
					country_event = {
						id = spt.16
						days = 3
					}
				}
				ITA = {
					add_power_balance_value = {
						id = ITA_MED_med_front
						value = 0.15
					}
				}
			}

			#ENG loses Suez or Gibraltar (triggers Shipping Routes Disrupted event for ENG)
			if = {
				limit = {
					OR = {
						AND = {
							#Gibraltar
							118 = { NOT = {is_controlled_by = ENG }}
							118 = { is_owned_by = ENG }
						}
						AND = {
							#Suez
							446 = { NOT = {is_controlled_by = ENG }}
							446 = { is_owned_by = ENG }
						}
					}
					ENG = {
						NOT = {has_idea = spt_disrupted_shipping_hidden}
					}
				}
				ENG = {
					country_event = {
						id = spt.111
						days = 1
					}
				}
			}
		}
	}
	on_capitulation = {
		effect = {
			#Checks if jap or usa cap each other
			if = {
				limit = {
					OR = {
						AND = {
							ROOT = {
								original_tag = JAP
							}
							FROM = {
								original_tag = USA
							}
						}
						AND = {
							ROOT = {
								original_tag = USA
							}
							FROM = {
								original_tag = JAP
							}
						}
					}
				}
				FROM = {
					add_ideas = PAC_total_victory
				}
			}
			#Get compliance when ger takes france
			if = {
				limit = {
					ROOT = {
						original_tag = FRA
					}
					capped_by_axis = yes
				}
				set_global_flag = france_fallen
				GER = {
					if = {
						limit = {
							has_completed_focus = GER_fra_compliance
						}
						country_event = {
							id = spt.103
							days = 7
						}
					}
				}
			}
			#Get compliance when ger takes poland
			if = {
				limit = {
					capped_by_axis = yes
					ROOT = {
						original_tag = POL
					}
				}
				GER = {
					if = {
						limit = {
							has_completed_focus = GER_pol_compliance
						}
						country_event = {
							id = spt.100
							days = 7
						}
					}
				}
			}
		}
	}
	on_declare_war = {
		effect = {
			if = {
				limit = {
					ROOT = {
						tag = JAP
					}
					FROM = {
						is_in_faction_with = ENG
					}
				}
				JAP = {
					#add_ideas = JAP_tora_tora_tora_idea
					add_timed_idea = {
						idea = JAP_tora_tora_tora_idea
						days = 180
					}
				}
			}


			if = {
				limit = {
					ROOT = {
						tag = JAP
					}
					FROM = {
						tag = CHI
					}
				}
				MON = {
					country_event = { 
						id = spt_mongolia.13
						days = 7
					}
				}
				MON = {
					country_event = {
						id = spt_mongolia.15
						days = 35
					}
				}
			}
		}
	}
	on_war_relation_added = {
		effect = {
			#Check if usa is at war with jap and add bop
			if = {
				limit = {
					USA = {
						has_war_with = JAP
						NOT = {
							has_power_balance = {
								id = USA_PAC_pacific_front
							}
						}
					}
					NOT = {
						has_global_flag = Pacific_War
					}
				}
				USA = {
					country_event = {
						id = spt.14
						days = 3
					}
				}
				JAP = {
					country_event = {
						id = spt.14
						days = 3
					}
				}
				set_global_flag = Pacific_War
			}
			#Check if eng is at war with ita and add bop
			if = {
				limit = {
					ENG = {
						has_war_with = ITA
						NOT = {
							has_power_balance = {
								id = ENG_MED_med_front
							}
						}
					}
					NOT = {
						has_global_flag = Med_War
					}
				}
				ENG = {
					country_event = {
						id = spt.15
						days = 3
					}
				}
				ITA = {
					country_event = {
						id = spt.15
						days = 3
					}
				}
				set_global_flag = Med_War
			}
		}
	}
	on_peace = {
		effect = {
			#Check if usa is at peace with jap and remove bop
			if = {
				limit = {
					USA = {
						NOT = {
							has_war_with = JAP
						}
						has_power_balance = {
							id = USA_PAC_pacific_front
						}
					}
				}
				USA = {
					remove_power_balance = {
						id = USA_PAC_pacific_front
					}
				}
				JAP = {
					remove_power_balance = {
						id = JAP_PAC_pacific_front
					}
				}
				clr_global_flag = Pacific_War
			}
		}
		effect = {
			#Check if eng is at peace with ita and remove bop
			if = {
				limit = {
					ENG = {
						NOT = {
							has_war_with = ITA
						}
						has_power_balance = {
							id = ENG_MED_med_front
						}
					}
				}
				ENG = {
					remove_power_balance = {
						id = ENG_MED_med_front
					}
				}
				ITA = {
					remove_power_balance = {
						id = ITA_MED_med_front
					}
				}
				clr_global_flag = Med_War
			}
		}
	}
	on_operation_completed = {
		effect = {
			FROM = {
				save_event_target_as = victim_nation
			}
			THIS = {
				save_event_target_as = this_operation
			}
			ROOT = {
				save_event_target_as = root_test
			}
			ROOT = {
				country_event = {
					id = spt.99					#Operation Completed
					days = 1
				}
			}
		}
	}


	# prevent capitulation bugs for HOL BEL FRA
	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			if = {
				limit = {
					original_tag = FRA
					has_government = democratic
					is_puppet = no
				}
				drop_cosmetic_tag = yes
			}
		}
	}
	#ROOT is capitulated country, FROM is winner.
	on_capitulation_immediate = {
		effect = {
			if = { #SPTChange add suriname for netherlands
				limit = {
					ROOT = {
						original_tag = HOL
						is_in_faction = yes
						#is_government_in_exile = yes
					}
				}
				if = {
					limit = {
						309 = {
							is_fully_controlled_by = ROOT
						}
					}
					309 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
			}
			if = {
				limit = {
					ROOT = {
						original_tag = BEL
						is_in_faction = yes
						#is_government_in_exile = yes
					}
				}
				if = {
					limit = {
						295 = {
							is_fully_controlled_by = ROOT
						}
					}
					295 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}

				if = {
					limit = {
						538 = {
							is_fully_controlled_by = ROOT
						}
					}

					538 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}

				if = {
					limit = {
						888 = {
							is_fully_controlled_by = ROOT
						}
					}

					888 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}

				if = {
					limit = {
						889 = {
							is_fully_controlled_by = ROOT
						}
					}
					889 = { set_state_flag = prevent_auto_flip_after_capitulation }

				}

				if = {
					limit = {
						890 = {
							is_fully_controlled_by = ROOT
						}
					}

					890 = { set_state_flag = prevent_auto_flip_after_capitulation }

				}

				if = {
					limit = {
						769 = {
							is_fully_controlled_by = ROOT
						}
					}

					769  = { set_state_flag = prevent_auto_flip_after_capitulation }
				}

				if = {
					limit = {
						768 = {
							is_fully_controlled_by = ROOT
						}
					}
					768 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}

				if = {
					limit = {
						718 = {
							is_fully_controlled_by = ROOT
						}
					}
					718 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
			}
			
			if = {
				limit = {
					ROOT = {
						original_tag = FRA
						is_in_faction = yes
					}
					#635 = { is_fully_controlled_by = ROOT } # SPTChange add free france states
				}
				#635 = { set_state_flag = prevent_auto_flip_after_capitulation }

				if = {
					limit = {
						635 = {
							is_fully_controlled_by = ROOT
						}
					}
					635 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						641 = {
							is_fully_controlled_by = ROOT
						}
					}
					641 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						320 = {
							is_fully_controlled_by = ROOT
						}
					}
					320 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						728 = {
							is_fully_controlled_by = ROOT
						}
					}
					728 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						734 = {
							is_fully_controlled_by = ROOT
						}
					}
					734 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						268 = {
							is_fully_controlled_by = ROOT
						}
					}
					268 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						310 = {
							is_fully_controlled_by = ROOT
						}
					}
					310 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						694 = {
							is_fully_controlled_by = ROOT
						}
					}
					694 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						1 = {
							is_fully_controlled_by = ROOT
						}
					}
					1 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						458 = {
							is_fully_controlled_by = ROOT
						}
					}
					458 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						459 = {
							is_fully_controlled_by = ROOT
						}
					}
					459 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						460 = {
							is_fully_controlled_by = ROOT
						}
					}
					460 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						461 = {
							is_fully_controlled_by = ROOT
						}
					}
					461 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						462 = {
							is_fully_controlled_by = ROOT
						}
					}
					462 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						665 = {
							is_fully_controlled_by = ROOT
						}
					}
					665 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						513 = {
							is_fully_controlled_by = ROOT
						}
					}
					513 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						543 = {
							is_fully_controlled_by = ROOT
						}
					}
					543 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						706 = {
							is_fully_controlled_by = ROOT
						}
					}
					706 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						708 = {
							is_fully_controlled_by = ROOT
						}
					}
					708 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						713 = {
							is_fully_controlled_by = ROOT
						}
					}
					713 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						799 = {
							is_fully_controlled_by = ROOT
						}
					}
					799 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						677 = {
							is_fully_controlled_by = ROOT
						}
					}
					677 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						680 = {
							is_fully_controlled_by = ROOT
						}
					}
					680 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						553 = {
							is_fully_controlled_by = ROOT
						}
					}
					553 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						554 = {
							is_fully_controlled_by = ROOT
						}
					}
					554 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						557 = {
							is_fully_controlled_by = ROOT
						}
					}
					557 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						272 = {
							is_fully_controlled_by = ROOT
						}
					}
					272 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						780 = {
							is_fully_controlled_by = ROOT
						}
					}
					780 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						899 = {
							is_fully_controlled_by = ROOT
						}
					}
					899 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						779 = {
							is_fully_controlled_by = ROOT
						}
					}
					779 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						898 = {
							is_fully_controlled_by = ROOT
						}
					}
					898 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						778 = {
							is_fully_controlled_by = ROOT
						}
					}
					778 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						777 = {
							is_fully_controlled_by = ROOT
						}
					}
					777 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						776 = {
							is_fully_controlled_by = ROOT
						}
					}
					776 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						781 = {
							is_fully_controlled_by = ROOT
						}
					}
					781 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						774 = {
							is_fully_controlled_by = ROOT
						}
					}
					774 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						660 = {
							is_fully_controlled_by = ROOT
						}
					}
					660 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						773 = {
							is_fully_controlled_by = ROOT
						}
					}
					773 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						772 = {
							is_fully_controlled_by = ROOT
						}
					}
					772 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
				if = {
					limit = {
						539 = {
							is_fully_controlled_by = ROOT
						}
					}
					539 = { set_state_flag = prevent_auto_flip_after_capitulation }
				}
			}
		}
	}

	# remove protection after captured or capitulation
	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					FROM = {
						is_in_faction = yes
					}

					FROM.FROM = {
						has_state_flag = prevent_auto_flip_after_capitulation
					}
				}

				FROM.FROM = { clr_state_flag = prevent_auto_flip_after_capitulation }
				# SPTChange not sure why paradox would do this?
				# FROM = {
				# 	set_state_controller = FROM.FROM
				# }
				
			}
		}
	}

	on_peaceconference_started = {
		effect = {
			# SPTChange add suriname
			#Netherlands
			if = {
				limit = {
					309 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				309 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			#Belgium
			if = {
				limit = {
					295 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				295 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					538 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				538 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					888 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				888 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					889 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				889 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					890 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				890 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					769 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				769 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					768 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				768 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}

			if = {
				limit = {
					718 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				718 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			#France
			if = {
				limit = {
					635 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				635 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			# SPTChange add all free france states
			if = { 
				limit = {
					641 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				641 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					320 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				320 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					728 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				728 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					734 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				734 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					268 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				268 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					310 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				310 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					694 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				694 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					1 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				1 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					458 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				458 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					459 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				459 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					460 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				460 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					461 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				461 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					462 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				462 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					665 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				665 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					513 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				513 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					543 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				543 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					706 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				706 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					708 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				708 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					713 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				713 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					799 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				799 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					677 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				677 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					680 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				680 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					553 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				553 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					554 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				554 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					557 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				557 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					272 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				272 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					780 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				780 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					899 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				899 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					779 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				779 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					898 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				898 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					778 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				778 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					777 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				777 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					776 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				776 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					781 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				781 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					774 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				774 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					660 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				660 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					773 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				773 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					772 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				772 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
			if = {
				limit = {
					539 = { has_state_flag = prevent_auto_flip_after_capitulation }
				}
				539 = { clr_state_flag = prevent_auto_flip_after_capitulation }
			}
		}
	}
}
SPT_transfer_ships_FRA_to_HTF = {
	set_variable = {
		var = NumShips
		value = FRA.num_ships_with_type@destroyer
	}
	divide_variable = {
		NumShips = 2
	}
	round_variable = NumShip
	for_loop_effect = {
		value = ForIntegerCounter
		start = 0
		end = NumShips
		add = 1
		FRA = {
			transfer_ship = {
				type = destroyer
				target = HTF
			}
		}
	}

	set_variable = {
		var = NumShips
		value = FRA.num_ships_with_type@light_cruiser
	}
	divide_variable = {
		NumShips = 2
	}
	round_variable = NumShip
	for_loop_effect = {
		value = ForIntegerCounter
		start = 0
		end = NumShips
		add = 1
		FRA = {
			transfer_ship = {
				type = light_cruiser
				target = HTF
			}
		}
	}
	set_variable = {
		var = NumShips
		value = FRA.num_ships_with_type@heavy_cruiser
	}
	divide_variable = {
		NumShips = 2
	}
	round_variable = NumShip
	for_loop_effect = {
		value = ForIntegerCounter
		start = 0
		end = NumShips
		add = 1
		FRA = {
			transfer_ship = {
				type = heavy_cruiser
				target = HTF
			}
		}
	}
	set_variable = {
		var = NumShips
		value = FRA.num_ships_with_type@carrier
	}
	divide_variable = {
		NumShips = 2
	}
	round_variable = NumShip
	for_loop_effect = {
		value = ForIntegerCounter
		start = 0
		end = NumShips
		add = 1
		FRA = {
			transfer_ship = {
				type = carrier
				target = HTF
			}
		}
	}
	
	set_variable = {
		var = NumShips
		value = FRA.num_ships_with_type@battleship
	}
	divide_variable = {
		NumShips = 2
	}
	round_variable = NumShip
	for_loop_effect = {
		value = ForIntegerCounter
		start = 0
		end = NumShips
		add = 1
		FRA = {
			transfer_ship = {
				type = battleship
				target = HTF
			}
		}
	}
	FRA = {
		transfer_navy = {target=ATF}
	}
	
}

#give Finland military access
SPT_FIN_pact_for_continuation_war_start = {
	every_country = {
		limit = {
			original_tag = FIN
		}
		if = {
			limit = {
				NOT = { has_military_access_to = GER }
				NOT = { gives_military_access_to = GER }
			}
			give_military_access = GER
		}
	}
	every_country = {
		limit = {
			is_in_faction_with = GER
			NOT = { gives_military_access_to = FIN }
			NOT = { has_military_access_to = FIN }
		}
		give_military_access = FIN
	}
	if = {
		limit = {
			FIN = { NOT = { has_non_aggression_pact_with = GER } }
		}
		FIN ={
			diplomatic_relation = { 
				country = GER
				relation = non_aggression_pact 
				active = yes
			}
		}
	}
}

SPT_FIN_continuation_war_start = { #To be used on FIN's scope - Used immediately upon signing agreement
	every_country = {
		limit = {
			original_tag = FIN
		}
		give_military_access = GER
		give_military_access = ITA
		give_military_access = HUN
		give_military_access = ROM
		give_military_access = BUL
		give_military_access = DEN
		give_military_access = SPR
	}
	every_country = {
		limit = {
			OR = {
				tag = GER
				tag = ITA
				tag = HUN
				tag = ROM
				tag = BUL
				tag = DEN
				tag = SPR
			}
		}
		give_military_access = FIN
	}
}

# added a script to swap the armor designer with the improved one
JAP_armor_designer_swap = { 
	if = {
		limit = {
			has_idea =  osaka_army_arsenal
		}
		swap_ideas = {
			remove_idea = osaka_army_arsenal
			add_idea = osaka_improved
		}
	}
}

SPT_JAP_spawn_railway_guns = {
	custom_effect_tooltip = SPT_JAP_spawn_railway_guns_tt
	hidden_effect = {
		create_railway_gun = {
			equipment = railway_gun_equipment_1
			name = "Ressha Houdai Ichi"
		}
		create_railway_gun = {
			equipment = railway_gun_equipment_1
			name = "Ressha Houdai Ni"
		}
		create_railway_gun = {
			equipment = railway_gun_equipment_1
			name = "Ressha Houdai San"
		}
	}
}

# check if jet engine is researched
ITA_add_supremacy_in_the_skies_templates = {

	create_equipment_variant = {
		name = "SM.84"
		type = medium_plane_airframe_2
		parent_version = 0
		modules = {
				fixed_main_weapon_slot = medium_bomb_bay
				fixed_auxiliary_weapon_slot_1 = torpedo_mounting
				fixed_auxiliary_weapon_slot_2 = torpedo_mounting
				engine_type_slot = engine_2_3x
				special_type_slot_1 = hmg_defense_turret_2x
				special_type_slot_2 = hmg_defense_turret_2x
				special_type_slot_3 = armor_plate_medium
			}
		icon = "GFX_ITA_tactical_bomber2_medium"
	}

	if = {
		limit = {
			has_tech = jet_engines
		}
		create_equipment_variant = {
			name = "Campini N.1"
			type = small_plane_airframe_4
			parent_version = 0
			modules = {
					fixed_main_weapon_slot = aircraft_cannon_2_2x
					fixed_auxiliary_weapon_slot_1 = aircraft_cannon_2_2x
					engine_type_slot = jet_engine_1x
					special_type_slot_1 = armor_plate_small
					special_type_slot_2 = self_sealing_fuel_tanks_small
				}
			icon = "GFX_ITA_jet_plane_1_medium"
		}
	}
}

# stop quisling resistance

NOR_apply_resistance_to_fascists = {
	
}

SPT_ITA_bop_spirits = {

	ITA = {
		if = {
			limit = {
				AND = {
					power_balance_value = {
						id = ITA_power_balance
						value > 0.099
					}
					power_balance_value = {
						id = ITA_power_balance
						value < 0.3
					}
				}
			}
			if = {
				limit = {
					has_completed_focus = ITA_italo_balbo_focus
				}
				add_ideas = SPT_italy_bop_low_balbo
			}
			else_if = {
				limit = { 
					has_completed_focus = ITA_dino_grandi_focus
				}
				add_ideas = SPT_italy_bop_low_grandi
			}
			else = {
				add_ideas = SPT_italy_bop_low_mussolini
			}
		}
		else_if = {
			limit = {
				AND = {
					power_balance_value = {
						id = ITA_power_balance
						value > 0.299
					}
					power_balance_value = {
						id = ITA_power_balance
						value < 0.6
					}
				}
			}

			if = {
				limit = {
					has_completed_focus = ITA_italo_balbo_focus
				}
				add_ideas = SPT_italy_bop_medium_balbo
			}
			else_if = {
				limit = { 
					has_completed_focus = ITA_dino_grandi_focus
				}
				add_ideas = SPT_italy_bop_medium_grandi
			}
			else = {
				add_ideas = SPT_italy_bop_medium_mussolini
			}

		}
		else_if = {
			limit = {
				AND = {
					power_balance_value = {
						id = ITA_power_balance
						value > 0.599
					}
					power_balance_value = {
						id = ITA_power_balance
						value < 0.9
					}
				}
			}

			if = {
				limit = {
					has_completed_focus = ITA_italo_balbo_focus
				}
				add_ideas = SPT_italy_bop_high_balbo
			}
			else_if = {
				limit = { 
					has_completed_focus = ITA_dino_grandi_focus
				}
				add_ideas = SPT_italy_bop_high_grandi
			}
			else = {
				add_ideas = SPT_italy_bop_high_mussolini
			}

		}
		else = {
			if = {
				limit = {
					has_completed_focus = ITA_italo_balbo_focus
				}
				add_ideas = SPT_italy_bop_total_balbo
			}
			else_if = {
				limit = { 
					has_completed_focus = ITA_dino_grandi_focus
				}
				add_ideas = SPT_italy_bop_total_grandi
			}
			else = {
				add_ideas = SPT_italy_bop_total_mussolini
			}
		}
	}

}

SPT_USA_spin_the_wheel = {
	USA = {
		random_list = {
			1 = {
				add_to_variable = {
					var = representatives_support
					value = 8
				}
				add_to_variable = {
					var = senators_support
					value = 4
				}
				country_event = { id = usa.50 days = 6 }
				country_event = { id = usa.51 days = 9 }

				set_variable = { election_factor = random }
			}
			1 = {
				add_to_variable = {
					var = representatives_support
					value = 7
				}
				add_to_variable = {
					var = senators_support
					value = 4
				}
				country_event = { id = usa.50 days = 4 }
				country_event = { id = usa.51 days = 6 }
				set_variable = { election_factor = random }
			}
			1 = {
				add_to_variable = {
					var = representatives_support
					value = 6
				}
				add_to_variable = {
					var = senators_support
					value = 3
				}
				country_event = { id = usa.50 days = 2 }
				country_event = { id = usa.51 days = 2 }
				set_variable = { election_factor = random }
			}
			1 = {
				add_to_variable = {
					var = representatives_support
					value = -12
				}
				add_to_variable = {
					var = senators_support
					value = -6
				}
				country_event = { id = usa.50 days = 3 }
				country_event = { id = usa.51 days = 1 }
				set_variable = { election_factor = random }
			}
			1 = {
				add_to_variable = {
					var = representatives_support
					value = -14
				}
				add_to_variable = {
					var = senators_support
					value = -7
				}
				country_event = { id = usa.50 days = 5 }
				country_event = { id = usa.51 days = 3 }
				set_variable = { election_factor = random }
			}
			1 = {
				add_to_variable = {
					var = representatives_support
					value = -20
				}
				add_to_variable = {
					var = senators_support
					value = -10
				}
				country_event = { id = usa.50 days = 6 }
				country_event = { id = usa.51 days = 7 }
				set_variable = { election_factor = random }
			}
		}
		USA_congress_small_opposition = yes
		USA_congress_small_opposition = yes
		USA_recalc_congress_icon_frames = yes
		set_variable = { election_factor = random }
		multiply_variable = {
			var = election_factor
			value = 2
		}
		if = {
			limit = {
				check_variable = {
					var = election_factor
					value = 1.0
					compare = greater_than_or_equals
				}
			}
			set_variable = {
				var = election_factor
				value = 0.9
			}
		}
		if = {
			limit = {
				check_variable = {
					var = election_factor
					value = -1.0
					compare = less_than_or_equals
				}
			}
			set_variable = {
				var = election_factor
				value = -0.9
			}
		}
	}
}

#condensing this into a more efficient and readable code has been left as an exercise for the reader
#please paradox stop making up countries, nobody has been requesting playable mongolia
SPT_remove_useless_cores = {
	every_state = {
		if = {
			limit = {
				is_core_of = RIF
			}
			remove_core_of = RIF
		}
		if = {
			limit = {
				is_core_of = OCC
			}
			remove_core_of = OCC
		}
		if = {
			limit = {
				is_core_of = BRI
			}
			remove_core_of = BRI
		}
		if = {
			limit = {
				is_core_of = COR
			}
			remove_core_of = COR
		}
		if = {
			limit = {
				is_core_of = SCO
			}
			remove_core_of = SCO
		}
		if = {
			limit = {
				is_core_of = NIR
			}
			remove_core_of = NIR
		}
		if = {
			limit = {
				is_core_of = WLS
			}
			remove_core_of = WLS
		}
		if = {
			limit = {
				is_core_of = PRE
			}
			remove_core_of = PRE
		}
		if = {
			limit = {
				is_core_of = RHI
			}
			remove_core_of = RHI
		}
		if = {
			limit = {
				is_core_of = WUR
			}
			remove_core_of = WUR
		}
		if = {
			limit = {
				is_core_of = BAY
			}
			remove_core_of = BAY
		}
		if = {
			limit = {
				is_core_of = HES
			}
			remove_core_of = HES
		}
		if = {
			limit = {
				is_core_of = HAN
			}
			remove_core_of = HAN
		}
		if = {
			limit = {
				is_core_of = MEK
			}
			remove_core_of = MEK
		}
		if = {
			limit = {
				is_core_of = SHL
			}
			remove_core_of = SHL
		}
		if = {
			limit = {
				is_core_of = KSH
			}
			remove_core_of = KSH
		}
		if = {
			limit = {
				is_core_of = SAX
			}
			remove_core_of = SAX
		}
		if = {
			limit = {
				is_core_of = THU
			}
			remove_core_of = THU
		}
		if = {
			limit = {
				is_core_of = SIL
			}
			remove_core_of = SIL
		}
		if = {
			limit = {
				is_core_of = GRN
			}
			remove_core_of = GRN
		}
		if = {
			limit = {
				is_core_of = SMI
			}
			remove_core_of = SMI
		}
		if = {
			limit = {
				is_core_of = SPM
			}
			remove_core_of = SPM
		}
		if = {
			limit = {
				is_core_of = LBV
			}
			remove_core_of = LBV
		}
		if = {
			limit = {
				is_core_of = PAP
			}
			remove_core_of = PAP
		}
		if = {
			limit = {
				is_core_of = TOS
			}
			remove_core_of = TOS
		}
		if = {
			limit = {
				is_core_of = TTS
			}
			remove_core_of = TTS
		}
		if = {
			limit = {
				is_core_of = TRA
			}
			remove_core_of = TRA
		}
		if = {
			limit = {
				is_core_of = MOL
			}
			remove_core_of = MOL
		}
		if = {
			limit = {
				is_core_of = ASY
			}
			remove_core_of = ASY
		}
		
		if = {
			limit = {
				is_core_of = TIG
			}
			remove_core_of = TIG
		}
		if = {
			limit = {
				is_core_of = QEM
			}
			remove_core_of = QEM
		}
		if = {
			limit = {
				is_core_of = BEG
			}
			remove_core_of = BEG
		}
		if = {
			limit = {
				is_core_of = HAR
			}
			remove_core_of = HAR
		}
		if = {
			limit = {
				is_core_of = ORO
			}
			remove_core_of = ORO
		}
		if = {
			limit = {
				is_core_of = SID
			}
			remove_core_of = SID
		}
		if = {
			limit = {
				is_core_of = FSA
			}
			remove_core_of = FSA
		}
		if = {
			limit = {
				is_core_of = NMB
			}
			remove_core_of = NMB
		}
		if = {
			limit = {
				is_core_of = YUC
			}
			remove_core_of = YUC
		}
		if = {
			limit = {
				is_core_of = RIG
			}
			remove_core_of = RIG
		}
		if = {
			limit = {
				is_core_of = QUE
			}
			remove_core_of = QUE
		}
		if = {
			limit = {
				is_core_of = PRC
			}
			remove_core_of = PRC
		}
		if = {
			limit = {
				is_core_of = BLR
			}
			remove_core_of = BLR
		}
		if = {
			limit = {
				is_core_of = UKR
			}
			remove_core_of = UKR
		}
		if = {
			limit = {
				is_core_of = LIT
			}
			remove_core_of = LIT
		}
		if = {
			limit = {
				is_core_of = ABK
			}
			remove_core_of = ABK
		}
		if = {
			limit = {
				is_core_of = ALT
			}
			remove_core_of = ALT
		}
		if = {
			limit = {
				is_core_of = AZR
			}
			remove_core_of = AZR
		}
		if = {
			limit = {
				is_core_of = BSK
			}
			remove_core_of = BSK
		}
		if = {
			limit = {
				is_core_of = BUK
			}
			remove_core_of = BUK
		}
		if = {
			limit = {
				is_core_of = CIN
			}
			remove_core_of = CIN
		}
		if = {
			limit = {
				is_core_of = CKK
			}
			remove_core_of = CKK
		}
		if = {
			limit = {
				is_core_of = CHU
			}
			remove_core_of = CHU
		}
		if = {
			limit = {
				is_core_of = CRI
			}
			remove_core_of = CRI
		}
		if = {
			limit = {
				is_core_of = EVE
			}
			remove_core_of = EVE
		}
		if = {
			limit = {
				is_core_of = FER
			}
			remove_core_of = FER
		}
		if = {
			limit = {
				is_core_of = KBK
			}
			remove_core_of = KBK
		}
		if = {
			limit = {
				is_core_of = KAL
			}
			remove_core_of = KAL
		}
		if = {
			limit = {
				is_core_of = KAR
			}
			remove_core_of = KAR
		}
		if = {
			limit = {
				is_core_of = KAZ
			}
			remove_core_of = KAZ
		}
		if = {
			limit = {
				is_core_of = KHI
			}
			remove_core_of = KHI
		}
		if = {
			limit = {
				is_core_of = KOM
			}
			remove_core_of = KOM
		}
		if = {
			limit = {
				is_core_of = KYR
			}
			remove_core_of = KYR
		}
		if = {
			limit = {
				is_core_of = MEL
			}
			remove_core_of = MEL
		}
		if = {
			limit = {
				is_core_of = DAG
			}
			remove_core_of = DAG
		}
		if = {
			limit = {
				is_core_of = TAY
			}
			remove_core_of = TAY
		}
		if = {
			limit = {
				is_core_of = NOA
			}
			remove_core_of = NOA
		}
		if = {
			limit = {
				is_core_of = OVO
			}
			remove_core_of = OVO
		}
		if = {
			limit = {
				is_core_of = ARM
			}
			remove_core_of = ARM
		}
		if = {
			limit = {
				is_core_of = BYA
			}
			remove_core_of = BYA
		}
		if = {
			limit = {
				is_core_of = YAM
			}
			remove_core_of = YAM
		}
		if = {
			limit = {
				is_core_of = GEO
			}
			remove_core_of = GEO
		}
		if = {
			limit = {
				is_core_of = KKP
			}
			remove_core_of = KKP
		}
		if = {
			limit = {
				is_core_of = KHA
			}
			remove_core_of = KHA
		}
		if = {
			limit = {
				is_core_of = TAJ
			}
			remove_core_of = TAJ
		}
		if = {
			limit = {
				is_core_of = TMS
			}
			remove_core_of = TMS
		}
		if = {
			limit = {
				is_core_of = UZB
			}
			remove_core_of = UZB
		}
		if = {
			limit = {
				is_core_of = VGE
			}
			remove_core_of = VGE	
		}
		if = {
			limit = {
				is_core_of = YAK
			}
			remove_core_of = YAK
		}
		if = {
			limit = {
				is_core_of = TAT
			}
			remove_core_of = TAT
		}
		if = {
			limit = {
				is_core_of = UDM
			}
			remove_core_of = UDM
		}
		if = {
			limit = {
				is_core_of = VLA	
			}
			remove_core_of = VLA
		}
		if = {
			limit = {
				is_core_of = NEN
			}
			remove_core_of = NEN
		}
		if = {
			limit = {
				is_core_of = TIB
			}
			remove_core_of = TIB
		}
		if = {
			limit = {
				is_core_of = GBA
			}
			remove_core_of = GBA
		}
		if = {
			limit = {
				is_core_of = NAV
			}
			remove_core_of = NAV
		}
		if = {
			limit = {
				is_core_of = CAT
			}
			remove_core_of = CAT
		}
		if = {
			limit = {
				is_core_of = GLC
			}
			remove_core_of = GLC
		}
		if = {
			limit = {
				is_core_of = BLC	
			}
			remove_core_of = BLC	
		}
		
		if = {
			limit = {
				is_core_of = KHL	
			}
			remove_core_of = KHL
		}
		if = {
			limit = {
				is_core_of = BAN
			}
			remove_core_of = BAN
		}
		if = {
			limit = {
				is_core_of = SKK	
			}
			remove_core_of = SKK	
		}
		if = {
			limit = {
				is_core_of = SIN #SPT has jesus now
			}
			remove_core_of = SIN
		}
		if = {
			limit = {
				is_core_of = BIA
			}
			remove_core_of = BIA
		}
		if = {
			limit = {
				is_core_of = SOK
			}
			remove_core_of = SOK
		}
	}
}